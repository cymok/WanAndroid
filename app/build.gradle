plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

apply from: "../config_compose.gradle"

def cmdGitCommitId = 'git rev-parse --short HEAD'
def gitCommitId = cmdGitCommitId.execute().text.trim()

android {
    namespace 'com.example.flamingo'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.flamingo"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = ("${model.name}" +
                        "_${variant.versionName}" +
                        "_${variant.versionCode}" +
                        "_${variant.buildType.name}" +
//                        "_${variant.productFlavors[0].name}" +
                        "_${gitCommitId}" +
                        ".apk")/*.replace("_release", "")*/
            }
        }
    }
    flavorDimensions "mode"
    productFlavors {
        app {
            dimension "mode"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    // AGP8后Kotlin的JVM版本
//    kotlin {
//        jvmToolchain(8)
//    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        // plugins kotlin
        // 1.3.2 -> kotlin 1.7.20
        // 1.4.8 -> kotlin 1.8.22
        kotlinCompilerExtensionVersion '1.3.2'
//        kotlinCompilerExtensionVersion '1.4.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    lint {
        baseline = file("lint-baseline.xml")
    }
/*
    lintOptions {
        textReport true // 输出lint报告
        textOutput 'stdout'
        abortOnError false // 遇到错误不停止
    }
*/
}

dependencies {
    // 依赖项配置
    // https://developer.android.google.cn/studio/build/dependencies?hl=zh-cn&agpversion=4.0#dependency_configurations
    // Module
    implementation project(":module_common")
    // Lib
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation files('libs/module_lint_aar-debug.aar')
    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // Android
    // KTX https://developer.android.com/kotlin/ktx
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.+')
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.10.1'
    def lifecycle_version = "2.6.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0" // 停止维护
    implementation "androidx.lifecycle:lifecycle-process:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-service:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:${lifecycle_version}"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    def navigation_version = "2.6.0"
    implementation "androidx.navigation:navigation-fragment-ktx:${navigation_version}"
    implementation "androidx.navigation:navigation-ui-ktx:${navigation_version}"
    implementation "androidx.navigation:navigation-compose:${navigation_version}"
    implementation "androidx.palette:palette-ktx:1.0.0"
    implementation "androidx.room:room-ktx:2.5.2"
    implementation "androidx.sqlite:sqlite-ktx:2.3.1"
    implementation "androidx.work:work-runtime-ktx:2.8.1"
    implementation "androidx.paging:paging-runtime-ktx:3.2.0"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    // 快乐库 - 扩展
    // https://github.com/LouisCAD/Splitties
    def splitties_version = "3.0.0"
    implementation "com.louiscad.splitties:splitties-fun-pack-android-base:${splitties_version}"
    implementation "com.louiscad.splitties:splitties-fun-pack-android-base-with-views-dsl:${splitties_version}"
    implementation "com.louiscad.splitties:splitties-fun-pack-android-appcompat:${splitties_version}"
    implementation "com.louiscad.splitties:splitties-fun-pack-android-appcompat-with-views-dsl:${splitties_version}"
    implementation "com.louiscad.splitties:splitties-fun-pack-android-material-components:${splitties_version}"
    implementation "com.louiscad.splitties:splitties-fun-pack-android-material-components-with-views-dsl:${splitties_version}"
    // 快乐库 - 工具
    // https://github.com/Blankj/AndroidUtilCode
    implementation 'com.blankj:utilcodex:1.31.1'
    // 网络
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-scalars:${retrofit_version}"
    implementation 'com.google.code.gson:gson:2.10.1'
    // 数据库
    // https://github.com/guolindev/LitePal
    implementation 'org.litepal.guolindev:core:3.2.3'
    // 图片
    // https://github.com/bumptech/glide
    def glide_version = "4.15.1"
    implementation "com.github.bumptech.glide:glide:${glide_version}"
    kapt "com.github.bumptech.glide:compiler:${glide_version}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${glide_version}"
    implementation 'com.github.bumptech.glide:compose:1.0.0-alpha.1'
    implementation 'jp.wasabeef:glide-transformations:4.3.0'
    // 权限
    // https://github.com/guolindev/PermissionX
    implementation 'com.guolindev.permissionx:permissionx:1.7.1'
    // 消息
    // https://github.com/JeremyLiao/LiveEventBus
    implementation 'io.github.jeremyliao:live-event-bus-x:1.8.0'
    // 快乐库 - UI
    // https://github.com/RuffianZhong/RWidgetHelper
    implementation 'com.github.RuffianZhong:RWidgetHelper:androidx.v0.0.14'
    // RecyclerView ItemDecoration
    // https://github.com/grzegorzojdana/SpacingItemDecoration
    implementation 'com.github.grzegorzojdana:SpacingItemDecoration:1.1.0'
    // https://github.com/Yalantis/uCrop
    implementation 'com.github.yalantis:ucrop:2.2.8'
    // 支付宝
    implementation 'com.alipay.sdk:alipaysdk-android:15.8.15'
    // 微信
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android:6.8.24'
/*
    // https://github.com/square/leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'
*/
    // 通过委托 自动处理 `Fragment.onDestroyView()` 时的 `viewBinding = null` 防止内存泄漏
    // https://github.com/androidbroadcast/ViewBindingPropertyDelegate
    implementation 'com.github.kirich1409:viewbindingpropertydelegate-full:1.5.9'
//    implementation 'com.github.kirich1409:viewbindingpropertydelegate-noreflection:1.5.9'

}
