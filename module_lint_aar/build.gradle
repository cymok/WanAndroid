plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.aar'
    compileSdk 35

    defaultConfig {
        minSdk 21
        targetSdk 35

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // 调用 module_lint_lib 的 lintJarOutput，获得 jar 包
    lintPublish project(path: ":module_lint_lib", configuration: "lintJarOutput")
}

/*
// 调用 lintJarImport 得到 jar 包，拷贝到指定目录
task copyLintJar(type: Copy) {
    from(configurations.lintPublish) {
        rename {
            String fileName ->
                println fileName
                'lint.jar'
        }
    }
    into 'build/intermediates/lint/'
}

// 在 build 过程执行 copyLintJar 方法
afterEvaluate {
    tasks.find {
        it.name == 'prepareLintJarForPublish'
    }.each {
        it.dependsOn(copyLintJar)
    }
}
*/
